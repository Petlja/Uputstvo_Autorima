Quick_start
===========

Ако желите да брзо почнете са коришћењем Петљадок-а препоручујемо да кренете одавде. Овај брзи водич претпоставља да умете да користите командну линију и да се сналазите са коришћењем гитхаб-а. Ако нисте упознати са коришћењем ових алата или имате проблема са било којим кораком овог водича за брз улазак у Петљадок, погледајте одговарајуће погљавље упутства у коме је до детаља објашњен сваки корак употребе. 

Инсталација 
-----------

Инсталирајте Пајтона 3.6.х или новији. На овом `линку <https://www.python.org/downloads/>`_ ћете наћи тренутну верзију. Приликом инсталације обележите опцију да додате Пајтон у PATH варијаблу.

Инсталирајте Петљадок тако што ћете у командном прозору покренути команду ``pip install petljadoc`` (ако ово не ради пробајте ``py -3 -m pip install petljadoc``)

Ако до сада нисте радили са Гитхабом, препоручујемо да инсталирате `Github desktop <https://desktop.github.com/>`__.

Препоручујемо да инсталирате и `Visual Studio Code <https://code.visualstudio.com/download>`__, али он вам није неопходан и све можете радити у едитору по свом избору. 

За детаљније кораке о инсталацији свих потребних алата погледајте поглавље упутства `Инсталација потребних алата <instalacija_python.html>`_.

Употреба
--------

Почетак рада
''''''''''''

Највероватније ће за вас већ бити припремљен фолдер пројекта у Гитхаб репозиторијуму на Петљином Гитхаб налогу. Клонирајте Гитхаб репозиторијум на свој рачунар и отворите командни прозор у клонираном фолдеру. Када сте се позиционирали у root клонираног фолдера, покрените команду ``petljadoc preview``, што ће отворити локални прозор у вашем браузеру у коме ће бити приказан HTML приказ вашег пројекта. Не гасите овај командни прозор док не завршите са радом. 

.. reveal:: 1
    :showtitle: Започињање пројекта
    :hidetitle: Сакриј напомену
    
    .. infonote:: Самостално започињање пројекта
    
        Да бисте самостално започели пројекат, у празном фолдеру отворите командни прозор и покрените команду ``petljadoc init-course`` да бисте започели курс или ``petljadoc init-runestone`` да бисте започели приручник. Подесите почетне параметре (прилично самообјашњиво и касније може бити промењено) и можете почети са радом. 

Структура пројекта и измена фајлова
'''''''''''''''''''''''''''''''''''

У фолдеру ``_sources`` у оквиру вашег пројекта налазе се изворни фајлови (или субфолдери у којима су изворни фајлови) вашег пројекта. Изворни фајлови су написани у restructuredText формату и Петљадок сваким покретањем ``petljadoc preview`` ове фајлове претвара у HTML и приказује их у браузеру. Докле год је отворен комадни прозор у коме је покренута ова команда, након сваке измене изворних фајлова (сваки пут када се нешто промени и промена запамти) Петљадок ће у реалном времену ажурирати изглед фајлова у браузеру.

Погледајте нашу `Документацију <https://petlja.github.io/demo_kurs/>`__ како бисте видели како да форматирате restructuredText фајлове и шта све можете сместити у свој пројекат (и како ће то изглеати у браузеру).

У фолдер ``_images`` треба сместити све слике које желите да укључите у пројекат. 

У фолдер ``_src`` треба сместити све фајлове са кодом који ће бити укључени у пројекат (ако фолдера нема направите га)

У фолдер ``_includes`` треба сместити остале типове фајлова који ће бити укључени у пројекат (.pdf, .mp3...)


Структура курсева и приручника
------------------------------

Ако је ваш материјал курс (највероватније ће бити), у оквиру свог ``_sources`` фолдера имаћете index.yaml фајл и субфолдере који представљају лекције и у њима ће стајати .rst фајлови који представљају активности у лекцијама (може се радити о читању, квизу или видеу). 

Када желите да додате нову лекцију, додајете нови потфолдер у фолдер ``_sources`` и у тај потфолдер додајете нове .rst фајлове. 

``index.yaml`` је "контролни" фајл који носи све важне податке о курсу - између осталог и редослед лекција и активности у њима. Важно је поштовати структуру овог фајла и у њега укључити сваку нову лекцију и активност коју додате курсу. У поглављу `о форматирању овог фајла <kursevi.html#yaml>`__ је објашњено како се тачно форматира све у овом фајлу. 

Ако је ваш материјал приручник, довољно ће бити да нови фајл додате у фолдер ``_sources`` (нема нужно потребе за потфлодерима) и да тај фајл укључите у садржај у оквиру фајла ``index.rst``.




