Приручници
==========

Прво што треба да одлучите је да ли ће ваш материјал бити приручник или курс. Ако први пут радите са Петљадоком, највероватније ће вам чланови тима Фондације Петља рећи да ли је ваш материјал треба да буде у формату курса или приручника. Примери приручника израђених на овај начин на Петљи, могу се наћи `овде <https://petlja.org/biblioteka/r/kursevi/prirucnik-python>`__ или `овде <https://petlja.org/biblioteka/r/kursevi/pygame-prirucnik>`__. У изради приручника помоћу Петљадока добићете сличан изглед материјала овим материјалима.

Започињање рада на приручнику
:::::::::::::::::::::::::::::

.. infonote:: **Започет пројекат на Гитхабу**
      
   Врло је вероватно да ће приручник на коме је потребно да радите за вас већ бити започет и да ће бити довољно само да га преузмете са репозиторијума на Гитхабу. Ако је то случај, `овде <https://petlja.github.io/Uputstvo_Autorima/github.html>`__ можете видети како да преузмете одговарајући пројекат са Гитхаба. Након тога, слободно прескочите овај одељак и идите на следећи поднаслов, изглед пројекта.

Ако ипак сами започињете рад на новом приручнику мораћете сами да иницирате пројекат. Да бисте почели са радом на новом приручнику помоћу Петљадока потребно је да прво отворите нови фолдер где ће се приручник налазити. Затим је потребно да се у командној линији позиционирате у тај фолдер, што ћете најлакше урадити ако у Windows прозору тог фолдера у search bar укуцате ``cmd`` и притиснете ентер. 

.. image:: ../_images/Prirucnik1.png
   :width: 600px   
   :align: center 

То ће отворити командни прозор у коме је потребно покренути команду ``petljadoc init-runestone`` која ће направити костур пројекта у изабраном фолдеру. 

.. image:: ../_images/Prirucnik2.png
   :width: 600px   
   :align: center 

Када покренете ову команду потребно је да подесите још неколико параметара. Можете оставити предложене вредности (у угластим заградама) тако што ћете за сваки параметар притиснути ентер без уписивања било чега. Алтернативно, можете самостално подесити вредности ових параметара. На прво питање одговорите са ``y`` како бисте наставили даље. Потребно је да онда дате име пројекту, напишете име аутора, дате наслов који ће се појављивати у пројекту, изабрати програмски језик за примере кода који ће се извршавати у браузеру и на крају одабрати HTML тему целог пројекта (овде свакако оставите предложену вредност).

.. image:: ../_images/Prirucnik3.png
   :width: 600px   
   :align: center 

Изглед пројекта 
:::::::::::::::

Пошто сте покренули ``petljadoc init-runestone`` и подесили све параметре, у фолдеру пројекта биће започет пројекат са приручником и фолдер пројекта требало би да вам изгледа као на слици испод: 

.. image:: ../_images/Prirucnik4.png
   :width: 600px   
   :align: center 

У основном директоријуму налази се неколико конфигурационих фајлова (``conf.py``, ``pavement.py``, ``conf-petljadoc.json``, ``.gitignore``) које у већини случајева није потребно мењати, а служе подешавању одређених параметара пројекта. Поред ових фајлова налази се и фолдери ``_templates`` и ``_static`` садржe елементе који ће контролисати изглед .HTML фајлова (ни њих углавном није потребно мењати).

У фолдеру ``_sources`` налазе се изворни ``.rst`` фајлови у којима се заправо пише сав садржај пројекта у ``restructuredText`` формату. У том фолдеру ће на почетку бити ``index.rst`` фајл. 

Рад на приручницима
:::::::::::::::::::

Да бисте видели како ће се у браузеру приказати оно што пишете у ``.rst`` фајловима, потребно је да отворите командни прозор и да се позиционирате у фолдер пројекта, а затим покренете команду ``petljadoc preview``.

.. image:: ../_images/Prirucnik5.png
   :width: 600px   
   :align: center 

Након неколико секунди, ово ће од ваших изворних фајлова направити .HTML фајлове који ће се налазити у новонасталом ``_build`` фолдеру. Такође ово ће отворити браузер прозор са вашим приручником. Ако је све протекло како треба, ваш командни прозор требало би овако да изгледа 

.. image:: ../_images/Prirucnik7.png
   :width: 600px   
   :align: center 

У командном прозору ће се исписати ``build succeeded`` и испод тога ће писати да се садржај сервира на локалном серверу на одређеној адреси (у нашем примеру то је ``http://127.0.0.1:8000``) и да је отворен браузер са том адресом. Истовремено, у браузеру ће садржај бити доступан управо на овој адреси. 

.. image:: ../_images/Prirucnik6.png
   :width: 600px   
   :align: center 

**Овај командни прозор оставите отворен све време док будете радили на приручнику.** Ово је важно зато што на овај начин можете пратити промене које уносите у изворне ``.rst`` фајлове одмах након што их запамтите. Дакле, када у изворни фајл унесете неке промене и запамтите их, након неколико секунди, у браузеру ћете моћи да видите како те промене изгледају у .HTML фајловима (докле год ради командни прозор у коме је покренута команда ``petljadoc preview``). Препоручујемо да ове фајлове отварате помоћу едитора Visual Studio Code тако што ћете у фолдеру пројекта кликнути на десни клик и изабрати опцију ``open with code``. 

.. image:: ../_images/Prirucnik8.png
   :width: 600px   
   :align: center 

Ово ће отворити нови Visual Studio Code прозор у коме ћете са леве стране моћи да видите све фајлове и фолдере који се налазе унутар фолдера са пројектом, а, када одаберете жељени фајл, у средини ће бити садржај тог фајла. 

.. image:: ../_images/Prirucnik9.png
   :width: 600px   
   :align: center 

Index.rst и рад са фајловима
----------------------------

**Јако је важно** да током рада на пројекту задржите ``index.rst`` фајл који се налази у фолдеру ``_sources`` и који ће бити насловна страна вашег приручника, где се обично реферише на све остале фајлове у оквиру садржаја. У овом фајлу треба да се налази уводни текст који ће читаоцима представити приручник, као и садржај приручника у оквиру кога ће бити улинковани сви фајлови који се налазе у ``_sources`` фолдеру.

Садржај се прави помоћу директиве ``.. toctree::`` у којој се наводи листа свих .rst фајлова обухваћених пројектом. (о употреби директива у оквиру Петљадок пројеката погледајте `овде <https://petlja.github.io/demo_kurs/02_basics/02_directives.html>`__) 

Пример форматирања садражаја:

.. code-block:: rest

   .. toctree::
      :maxdepth: 2

      naslov_fajla1.rst
      naslov_fajla2.rst
      naslov_fajla.rst
      naslov_fajla4.rst

Директива ``.. toctree::`` може имати опцију ``:maxdepth:`` која као аргумент узима цео број који одређује ниво хијерархије (да бисте сазнали више о хијерархији наслова погледајте `овде <https://petlja.github.io/demo_kurs/02_basics/01_formatting.html#id5>`_) наслова и поднаслова који ће бити укључени у садржај. Када је ``:maxdepth:`` једнако 1, биће приказани само главни наслови у фајловима, када је ниво хијерархије 2, приказаће се и сви поднаслови, када је 3, биће приказани и сви поднаслови у оквиру поднаслова итд. У овом упутству је ``:maxdepth:`` садржаја једнака 3 и зато садржај приказује наслове 3 нивоа хијерархије: 

.. image:: ../_images/toc.png
   :width: 600px   
   :align: center 

Ако желите да додате нови фајл, у коме ћете, на пример, направити нову лекцију, потребно је да у фолдер ``_sources`` додате нови ``.rst`` фајл и да поново покренете ``petljadoc preview`` (или, ако вам је отворен командни прозор у коме сте раније покренули ову команду, само запамтите неки од фајлова поново и Петљадок ће сам ажурирати садржај који се приказује у браузеру). Такође, важно је да у том тренутку свој нови фајл улинкујете у садржај, пошто ћете у супротном добити поруку о грешци. 

За инструкције како модификујете саме фајлове, како да укључујете поједине елементе и међусобно повезујете фајлове, погледајте наш `Демо курс <https://petlja.github.io/demo_kurs/02_basics/01_formatting.html#id5>`_. Такође, можете користити и `овај пројекат <https://github.com/Petlja/Primer_Prirucnik/archive/master.zip>`__ као мустру која вам може помоћи у раду.   

Корисни линкови
:::::::::::::::

* Демо курс као помоћ за форматирање фајлова - https://petlja.github.io/demo_kurs/
* Поглавље `restructuredText <https://www.sphinx-doc.org/en/master/usage/restructuredtext/index.html>`__ из документације Sphinx-а 
* `Runestone Author’s Guide <https://runestone.academy/runestone/static/authorguide/index.html>`__
* `PetljaDoc README <https://github.com/Petlja/PetljaDoc/blob/master/README.md>`__ 
* Приручник Текстуално програмирање у Пајтону, урађен у Петљадоку `source code <https://github.com/Petlja/TxtProgInPythonSrLat>`__ and 
  `public preview <https://petlja.github.io/TxtProgInPythonSrLat/>`__
* Мустра за курс коју можете користити приликом рада https://github.com/Petlja/Primer_Kurs/archive/master.zip