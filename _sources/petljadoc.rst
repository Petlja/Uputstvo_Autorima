==================
Petljadoc употреба
==================

Шта је Petljadoc
::::::::::::::::

Петљадок представља низ алата који омогућују прављење интерактивних материјала за учење какве можете видети на сајту `petlja.org <https:\\petlja.org>`__. Ови материјали представљају курсеве и приручнике у које је могуће укључити Пајтон код тако да се извршава у браузеру, различите вежбе, интерактивна питања, слике, видео, звучне фајлове и сл.  

Петљадок у основи има `Runestone Interactive <https://github.com/RunestoneInteractive/RunestoneComponents>`__ и `Sphinx <https://github.com/sphinx-doc/sphinx>`__. Runestone користи ``restructuredText`` као језик за обележавање текста (markup language) у својим изворним фајловима. Изворни фајлови ових Runestone пројеката су у ``.rst`` формату и помоћу Петљадока их претварамо у ``.html`` фајлове које браузер може да приказује. 

У наредним поглављима објаснићемо како да радите са Петљадоком. Прво што треба да одлучите је да ли ће ваш материјал бити приручник или курс. Ако први пут радите са Петљадоком, највероватније ће вам чланови тима Фондације Петља рећи да ли је ваш материјал курс или приручник. 

Приручници
::::::::::

Примери приручника израђених на овај начин на Петљи, могу се наћи `овде <https://petlja.org/biblioteka/r/kursevi/prirucnik-python>`__ или `овде <https://petlja.org/biblioteka/r/kursevi/pygame-prirucnik>`__. У изради приручника помоћу Петљадока добићете сличан изглед материјала овим материјалима.

Започињање рада на приручнику
-----------------------------

.. infonote:: **Започет пројекат на Гитхабу**
      
   Врло је вероватно да ће приручник на коме је потребно да радите за вас већ бити започет и да ће бити довољно само да га преузмете са репозиторијума на Гитхабу. Ако је то случај, `овде <https://petlja.github.io/Uputstvo_Autorima/github.html>`__ можете видети како да преузмете одговарајући пројекат са Гитхаба. Након тога, слободно прескочите овај одељак и идите на следећи поднаслов, изглед пројекта.

Ако ипак сами започињете рад на новом приручнику мораћете сами да иницирате пројекат. Да бисте почели са радом на новом приручнику помоћу Петљадока потребно је да прво отворите нови фолдер где ће се приручник налазити. Затим је потребно да се у командној линији позиционирате у тај фолдер, што ћете најлакше урадити ако у Windows прозору тог фолдера у search bar укуцате ``cmd`` и притиснете ентер. 

.. image:: ../_images/Prirucnik1.png
   :width: 600px   
   :align: center 

То ће отворити командни прозор у коме је потребно покренути команду ``petljadoc init-runestone`` која ће направити костур пројекта у изабраном фолдеру. 

.. image:: ../_images/Prirucnik2.png
   :width: 600px   
   :align: center 

Када покренете ову команду потребно је да подесите још неколико параметара. Можете оставити предложене вредности (у угластим заградама) тако што ћете за сваки параметар притиснути ентер без уписивања било чега. Алтернативно, можете самостално подесити вредности ових параметара. На прво питање одговорите са ``y`` како бисте наставили даље. Потребно је да онда дате име пројекту, напишете име аутора, дате наслов који ће се појављивати у пројекту, изабрати програмски језик за примере кода који ће се извршавати у браузеру и на крају одабрати HTML тему целог пројекта (овде свакако оставите предложену вредност).

.. image:: ../_images/Prirucnik3.png
   :width: 600px   
   :align: center 

Изглед пројекта 
---------------

Пошто сте покренули ``petljadoc init-runestone`` и подесили све параметре, у фолдеру пројекта биће започет пројекат са приручником и фолдер пројекта требало би да вам изгледа као на слици испод: 

.. image:: ../_images/Prirucnik4.png
   :width: 600px   
   :align: center 

У основном директоријуму налази се неколико конфигурационих фајлова (``conf.py``, ``pavement.py``, ``conf-petljadoc.json``, ``.gitignore``) које у већини случајева није потребно мењати, а служе подешавању одређених параметара пројекта. Поред ових фајлова налази се и фолдери ``_templates`` и ``_static`` садржe елементе који ће контролисати изглед .HTML фајлова (ни њих углавном није потребно мењати).

У фолдеру ``_sources`` налазе се изворни ``.rst`` фајлови у којима се заправо пише сав садржај пројекта у ``restructuredText`` формату. У том фолдеру ће на почетку бити ``index.rst`` фајл и ``primer.rst``. Ово су два фајла која вам могу послужити као мустра за даљи рад са приручницима. 

Рад на приручницима
-------------------

Да бисте видели како ће се у браузеру приказати оно што пишете у ``.rst`` фајловима, потребно је да отворите командни прозор и да се позиционирате у фолдер пројекта, а затим покренете команду ``petljadoc preview``.

.. image:: ../_images/Prirucnik5.png
   :width: 600px   
   :align: center 

Након неколико секунди, ово ће од ваших изворних фајлова направити .HTML фајлове који ће се налазити у новонасталом ``_build`` фолдеру. Такође ово ће отворити браузер прозор са вашим приручником. Ако је све протекло како треба, ваш командни прозор требало би овако да изгледа 

.. image:: ../_images/Prirucnik7.png
   :width: 600px   
   :align: center 

У командном прозору ће се исписати ``build succeeded`` и испод тога ће писати да се садржај сервира на локалном серверу на одређеној адреси (у нашем примеру то је ``http://127.0.0.1:8000``) и да је отворен браузер са том адресом. Истовремено, у браузеру ће садржај бити доступан управо на овој адреси. 

.. image:: ../_images/Prirucnik6.png
   :width: 600px   
   :align: center 

**Овај командни прозор оставите отворен све време док будете радили на приручнику.** Ово је важно зато што на овај начин можете пратити промене које уносите у изворне ``.rst`` фајлове одмах након што их запамтите. Дакле, када у изворни фајл унесете неке промене и запамтите их, након неколико секунди, у браузеру ћете моћи да видите како те промене изгледају у .HTML фајловима (докле год ради командни прозор у коме је покренута команда ``petljadoc preview``). Препоручујемо да ове фајлове отварате помоћу едитора Visual Studio Code тако што ћете у фолдеру пројекта кликнути на десни клик и изабрати опцију ``open with code``. 

.. image:: ../_images/Prirucnik8.png
   :width: 600px   
   :align: center 

Ово ће отворити нови Visual Studio Code прозор у коме ћете са леве стране моћи да видите све фајлове и фолдере који се налазе унутар фолдера са пројектом, а, када одаберете жељени фајл, у средини ће бити садржај тог фајла. 

.. image:: ../_images/Prirucnik9.png
   :width: 600px   
   :align: center 

**Јако је важно** да током рада на пројекту задржите ``index.rst`` фајл који се налази у фолдеру ``_sources`` и који ће бити насловна страна вашег приручника и где се обично реферише на све остале фајлове у оквиру садржаја. Ако желите да додате нови фајл, у коме ћете, на пример, направити нову лекцију, потребно је да у фолдер ``_sources`` додате нови ``.rst`` фајл и да поново покренете ``petljadoc preview`` (или, ако вам је отворен командни прозор у коме сте раније покренули ову команду, само запамтите неки од фајлова поново и Петљадок ће сам ажурирати садржај који се приказује у браузеру).

За инструкције како модификујете саме фајлове, како да укључујете поједине елементе и међусобно повезујете фајлове, погледајте ``index.rst`` и ``primer.rst`` који се налазе у ``_sources`` фолдеру новог пројекта. Препоручујемо да покренете ``petljadoc preview`` и упоредите оно што се види у браузеру са оним што се види у .rst фајловима у оквиру ``_sources`` фолдера. Такође, можете користити и `овај пројекат <https://github.com/Petlja/Primer_Prirucnik/archive/master.zip>`__ као мустру која вам може помоћи у раду.   

Курсеви
:::::::

Примере за курсеве можете наћи на `овој страници <https://petlja.org/net.kabinet>`__.

Започињање рада на курсу
------------------------

.. infonote:: **Започет пројекат на Гитхабу**
      
   Врло је вероватно да ће курс на коме је потребно да радите за вас већ бити започет и да ће бити довољно само да га преузмете са репозиторијума на Гитхабу. Ако је то случај, `овде <https://petlja.github.io/Uputstvo_Autorima/github.html>`__ можете видети како да преузмете одговарајући пројекат са Гитхаба. Након тога, слободно прескочите овај одељак и идите на следећи поднаслов, изглед пројекта.

Да бисте почели са радом на новом курсу помоћу Петљадока потребно је да прво отворите нови фолдер где ће се курс налазити. Затим је потребно да се у командној линији позиционирате у тај фолдер, што ћете најлакше урадити ако у Windows прозору тог фолдера у *search bar* укуцате ``cmd`` и притиснете ентер. 

.. image:: ../_images/kurs1.png
   :width: 600px   
   :align: center 

То ће отворити командни прозор у коме је потребно покренути команду ``petljadoc init-course`` која ће направити костур пројекта у изабраном фолдеру. 

.. image:: ../_images/kurs2.png
   :width: 600px   
   :align: center 

Када покренете ову команду потребно је да подесите још неколико параметара. Можете оставити предложене вредности (у угластим заградама) тако што ћете за сваки параметар притиснути ентер без уписивања било чега. Алтернативно, можете самостално подесити вредности ових параметара. На прво питање одговорите са ``y`` како бисте наставили даље. Потребно је да онда дате име пројекту, напишете име аутора, дате наслов који ће се појављивати у пројекту, изабрати програмски језик за примере кода који ће се извршавати у браузеру и на крају одабрати HTML тему целог пројекта (овде свакако оставите предложену вредност).

Изглед пројекта 
---------------

Пошто на свом рачунару имате започету верзију пројекта, фолдер пројекта требало би да вам изгледа као на слици испод: 

.. image:: ../_images/kurs4.png
   :width: 600px   
   :align: center 

У основном директоријуму налази се неколико конфигурационих фајлова (``conf.py``, ``pavement.py``, ``conf-petljadoc.json``, ``.gitignore``) које у већини случајева није потребно мењати, а служе подешавању одређених параметара пројекта. Поред ових фајлова налази се и фолдер ``_templates`` који садржи елементе који ће контролисати изглед .HTML фајлова (ни садржај овог фолдера углавном није потребно мењати).

У фолдеру ``_sources`` налази се ``index.yaml`` фајл (о њему ће бити речи касније) као и фолдери у којима су смештени изворни ``.rst`` фајлови, у којима се заправо пише садржај пројекта у ``restructuredText`` формату.

На крају, фолдер ``_images`` служи смештању слика које ће бити коришћене у оквиру материјала, а фолдер ``_includes`` служи смештању различитих типова фајлова које је потребно укључити у курс (.pdf, .py i sl.)

Рад на курсевима
----------------

Да бисте видели како ће се у браузеру приказати оно што пишете у ``.rst`` фајловима, потребно је да отворите командни прозор и да се позиционирате у фолдер пројекта - ово ћете најлакше урадити тако што ћете у Windows прозору тог фолдера у *search bar* укуцати ``cmd`` и притиснути ентер.

.. image:: ../_images/kurs1.png
   :width: 600px   
   :align: center 

Након тога, унесите команду `petljadoc preview` и притисните ентер.

.. image:: ../_images/kurs5.png
   :width: 600px   
   :align: center 

Након неколико секунди, ово ће од ваших изворних фајлова направити .HTML фајлове који ће се налазити у новонасталом ``_build`` фолдеру. Такође ово ће отворити браузер прозор са вашим курсем. Ако је све протекло како треба, ваш командни прозор требало би овако да изгледа 

.. image:: ../_images/kurs6.png
   :width: 600px   
   :align: center 

У прозору ће писати ``build succeeded`` и испод тога ће писати да се садржај сервира на локалном серверу на одређеној адреси (у нашем примеру то је ``http://127.0.0.1:8000``) и да је отворен браузер са том адресом. Истовремено, у браузеру ће садржај бити доступан управо на овој адреси. 

.. image:: ../_images/kurs6.png
   :width: 600px   
   :align: center 


Након тога отвориће се у браузеру почетна страна курса која ће изгледати овако

.. image:: ../_images/kurs7.png
   :width: 600px   
   :align: center 

**Овај командни прозор оставите отворен све време док будете радили на курсу.** Ово је важно зато што на овај начин можете пратити промене које уносите у изворне ``.rst`` фајлове одмах након што их запамтите. Дакле, када у изворни фајл унесете неке промене и запамтите их, након неколико секунди, у браузеру ћете моћи да видите како те промене изгледају у .HTML фајловима (докле год ради командни прозор у коме је покренута команда ``petljadoc preview``). Препоручујемо да .rst фајлове отварате помоћу едитора Visual Studio Code тако што ћете у фолдеру пројекта кликнути на десни клик и изабрати опцију ``open with code``. 

.. image:: ../_images/kurs8.png
   :width: 600px   
   :align: center 

Ово ће отворити нови Visual Studio Code прозор у коме ћете са леве стране моћи да видите све фајлове и фолдере који се налазе унутар фолдера са пројектом, а, када одаберете жељени фајл, у средини ће бити садржај тог фајла. 

.. image:: ../_images/kurs9.png
   :width: 600px   
   :align: center 

Модификовање .rst фајлова
+++++++++++++++++++++++++

Већина вашег рада свешће се на писање текста у restructuredText формату у .rst фајловима који се налазе у фолдеру _sources. Покушајте да промените неку реч у оквиру неког од .rst фајлова који се налазе у субфолдерима _sources фолдера и да запамтите ту промену (CTRL + S у Visual Studio Code). У позадини је, наравно, неопходно да постоји покренут командни прозор у коме је извршена команда `petljadoc preview`. Видећете како се у браузеру у реалном времену мења оно што сте написали. 

Препоручујемо да пре него што наставите са радом погледате овај курс https://petlja.github.io/demo_kurs/.
На овој страници можете пронаћи низ корисних савета и примера који ће вам помоћи да боље разумете како да форматирате своје restructuredText фајл и како у њега укључите елементе које желите. Такође, препоручујемо да `овај пројекат <https://github.com/Petlja/Primer_Kurs/archive/master.zip>`__ користите као мустру ако будете имали проблема са форматирањем фајлова или укључивањем фајлова у пројекат. 

Ако вам затреба нешто што се не налази у демо курсу, а потребно вам је за рад, погелдајте овај `линк <https://www.sphinx-doc.org/en/master/usage/restructuredtext/index.html>`__. Овде можете наћи и `синтаксни подсетник (cheatsheet) <https://docutils.sourceforge.io/docs/user/rst/quickref.html>`__ који вам може бити користан приликом рада. 

Слободно се враћајте на линкове из овог поглавља и користите их као подсетник током целог процеса писања материјала. 

Међутим, поред модификације већ постојећих .rst фајлова, биће потребно да додајете и нове активности и за то ће бити неопходно да ажурирате .yaml фајл. 

Форматирање .yaml фајла
+++++++++++++++++++++++

**Јако је важно** да током рада на курсу правилно ажурирате (попуњавате и форматирате) ``index.yaml`` фајл. У овом фајлу налазе се сви релеватни подаци које Петљадок користи да би од изворних фајлова направио .html фајлове. Све нове лекције и садржаје које желите да укључите у свој пројекат морате, са једне стране убацити на одговарајуће место у структури пројекта (у одговарајућ фолдер), а са друге стране морате их укључити на одговарајућ начин укључити у ``index.yaml``.

Ово подразумева да **ОБАВЕЗНО** поштујете структуру назубљивања каква постоји у овом фајлу, Такође, јако је важно да се у подацима који се наводе у ``index.yaml`` поклапају са стањем у остатку пројекта. Када отворите ``index.yaml`` он ће изгледати као на слици испод. 

.. image:: ../_images/kurs10.png
   :width: 900px   
   :align: center 

Сада ћемо проћи кроз главне делове овог фајла и објаснити на шта је најважније обратити пажњу. 

Први део ``index.yaml`` фајла представља опште податке о курсу који ће се наћи на насловној страни курса када покренете ``petljadoc preview``. Ово је потребно попунити подацима о курсу и јако је важно да назубљивање остане са истом структуром. 

.. activecode:: yaml1
    :passivecode: true

    courseId: Test_primer
    lang: sr-Cyrl # ako je ćirilica onda sve ide na ćirilici, a u deploymentu će se ako treba konvertovati na latinicu natpis na kartici
    title: Пример Петљадок курса
    description:
    willLearn: # листа у којој се наводи шта ће све ученик научити на овом курсу
        - Научићете 1 
        - Научићете 2
    requirements: # листа у којој се наводи шта је непходно пре него што се почне са овим курсом
        - Имаш инсталиран Пајтон
        - Имаш инсталиран Петљадок
    toc: #садржај курса који ће се приказати на насловној страни
        - Пример_лекције
        - Пример_лекције2
    externalLinks: # опционо - односи се на линкове које аутор препоручује ученицима да погледају пре курса
        - text: Синтакса restructuredText
          href: https://docutils.sourceforge.io/docs/user/rst/quickref.html
        - text: Синтакса restructuredText 2
          href: https://www.sphinx-doc.org/en/master/usage/restructuredtext/index.html

Други део ``index.yaml`` фајла односи се на лекције. У њему је такође јако важно одржати исту структуру назубљивања, али такође је јако важно обратити пажњу на имена фајлова и фолдера као и на ``guid-e`` елемената.  Овај део фајла почиње линијом у којој се налази ``lessons:`` (погледајте код испод или отворите ``index.yaml`` у свом пројекту). 

Након тога следе лекције које су увучене са два спејса. Свака лекција почиње редом у коме се налази ``- title:`` У том реду потребно је написати назив лекције. У нашем примеру ставили смо као наслов прве лекције **Наслов_1**, а као наслов друге лекције **Naslov_2**.

После наслова долази поље ``- folder:`` у које се уноси назив фолдера у који су смештени фајлови лекције унутар ``_sources`` фолдера. Он се **МОРА ПОКЛАПАТИ** са називом фолдера лекције (ћирилица, латиница, велика слова, знаци интерпункције...) На нашем примеру то су фолдери ``Пример_лекција1`` и ``Пример_лекција2``. 

.. image:: ../_images/kurs11.png
   :width: 900px   
   :align: center 

Затим следи ``guid`` лекције. Он је обавезан и представља јединствени идентификатор за сваки елемент. Њега можете добити тако што ћете га генерисати `овде <https://www.guidgenerator.com/online-guid-generator.aspx>`__ или тако што ћете приснути F1 у Visual Studio Code-у и ту изабрати опцију ``insert guid`` која ће вам бити видљива ако сте инсталирали екстензију коју смо навели у поглављу *Инсталација потребних алата*. Исти ``guid`` не смете да користите више од једном иначе ћете добити грешку приликом покретања команде ``petljadoc preview``. 

Следеће поље представља опис лекције и оно је опционо. Поља ``title``, ``guid``, ``description`` и ``activities`` морају бити поравната.

На крају следе активности које се налазе у лекцији. Све активности морају бити увучене на начин на који је приказано у коду испод. Активности могу имати три типа ``reeding``, ``video`` и ``quiz``. Ако се ради о активности у којој се од ученика очекује да прочита неки текст (интерактиван или "обичан"), тип активности треба означити као ``reeding``. 

Након типа следи име ове активности у пољу ``title``.

Испод тога налази се фајл који представља изворни фајл ове активности. То може бити .rst фајл који се налази у фолдеру лекције (субфолдер унутар фолдера ``_sources``.) или .pdf фајл који треба да се налази унутар фолдера ``_static`` (у фолдеру пројекта). Име фајла овде мора **дословно** да се наведе (обратите пажњу на писмо, величину слова и на екстензију фајла). 

Након тога следи опис активности који је опцион и након тога следи ``guid`` (потребно је поново генерисати нови, јединствени ``guid`` за сваку активност). 

Ако је активност типа ``video``, потребно је навести линк ка видеу и наслов видеа може бити произвољан. 

Ако је активност типа ``quiz``, потребно је навести име .rst фајла у коме се налазе питања за квиз, а који је смештен у фолдер лекције у оквиру ``_sources`` фолдера. 

У лекцији нема ограничења на број активности.

Kада завршите са активностима, следи поље архивираних активности које је потребно поравнати са насловом лекције. Овде је потребно навести листу guid-a активности које су некада постојале у курсу и објављене су на петљи, а сада више не постоје. Ако таквих активности нема, слободно игноришите овај део фајла. 

Када желите да пређете на следећу лекцију, пазите на поравнање и на то да сваки елемент мора имати јединствен ``guid``. Важно је да свака нова лекција буде поравната са претходним лекцијама.  


.. activecode:: yaml2
    :passivecode: true

    lessons:
      - title: Наслов_1
        folder: Пример_лекција1
        guid: c2c651cd-53d9-4a3d-ba4f-650b8422f0bc
        description: Прва лекција
        activities:
        - type: reading
            title: Пример фајла
            file: primer_1.rst # fajl se označava onako kako je u source folderu, pa se u zavisnosti od tipa fajla prilagođava tip lekcije (reading, video, quiz)
            description: #opciono
            guid: 71c00155-f7f3-410d-8019-e88d22cb7f01
            #ova varijantasa /alias je samo za fazu migracije, poenta je da ako nije pronađen, onda se traži po aliasu, 
            #pa ako se nađe i guid je NULL, upisuje se, a inače se javlja greška. Kada se tako postave guidi, posle može da se obriše /alias
        - type: reading
            title: Пример pdf фајла
            file: primer_dokument.pdf
            description: ...
            guid: d90350ae-84e4-4e49-bac8-2d4849e3c409
        - type: video
            title: Пример видеа
            url: https://www.youtube.com/watch?v=flu3-ntQIlE # može da se navede i ceo YT url, a može i samo ID (id u bilo kom yt linku predstavlja 11 karatkera nakon v=)
            description: ...
            guid: 61657689-aa6b-46c9-87da-51869d6477ee
        - type: quiz 
            title: Пример теста
            file: primer_test_1.rst # kada uvedemo struktuirani format, ovde će moći da stoji test1.quiz.yaml
            description: ...
            guid: a725f29a-b323-4a1a-b52d-6eae141bc243
        archived-activities: # ne smeta ni ako se ostave drugi atribudi iz aktivnosti, ali se gleda samo guid
        - guid: de4d8ced-7457-4257-a156-250bdb711d65
        - guid: 22752682-f23f-4df7-b590-e22780fda0a3
      - title: Naslov_2
        folder: Пример_лекција2
        guid: c79a8591-ad06-4e46-9d4d-8ecb5361cf8c
        description:  Друга лекција
        activities:
        - type: reading
            title: Primer rst fajla
            file: primer_2.rst # fajl se označava onako kako je u source folderu, pa se u zavisnosti od tipa fajla prilagođava tip lekcije (reading, video, quiz)
            description: #opciono
            guid: 4576c9a4-2071-4a21-b221-a646477e05be
            #ova varijantasa /alias je samo za fazu migracije, poenta je da ako nije pronađen, onda se traži po aliasu, 
            #pa ako se nađe i guid je NULL, upisuje se, a inače se javlja greška. Kada se tako postave guidi, posle može da se obriše /alias    
    archived-lessons: # ne smeta ni ako se ostave drugi atribudi iz aktivnosti, ali se gleda samo guid
    - guid: 3ced8ac6-8be7-4921-bea7-dccf89a7cc79
    - guid: 29a3a23a-0cdb-4a2b-ad6b-611d36c39db5

Као што сте видели до сад, важно је да алтернирате између Visual Studio Code-a у коме ћете гледати изворне фајлове и браузера у коме ћете видети приказ онога што правите у изворним фајловима. Такође, важно је да када год додајете нешто ново од изворних фајлова, то на одговарајући начин назначите у .yaml фајлу како би Петљадок знао шта да прикаже у браузеру.

.. infonote:: Подсетник и смернице: 
            
            - Изворни фајлови (.rst) налазе се унутар потфолдера унуар фолдера ``_sources``
            - Ако желите да укључите .pdf фајл, сместие га у ``_static`` фолдер
            - Ако желите да укључите слике, сместите их у ``_images`` фолдер
            - Обавезно обратите пажњу на структуру ``index.yaml`` фајла
            - Обавезно обратите пажњу на имена фајлова и фолдера када их наводите у ``index.yaml`` фајлу
            - Сваки елемент ``index.yaml`` фајла мора да има свој јединствени ``guid``
            - Свака нова лекција и активност коју желите да укључите у курс морају бити наведене у ``index.yaml`` фајлу.
            - Ослоните се на мустре које смо вам припремили како бисте видели како да најлакше форматирате свој пројекат.   


Корисни линкови
:::::::::::::::

* Демо курс као помоћ за форматирање фајлова - https://petlja.github.io/demo_kurs/
* Поглавље `restructuredText <https://www.sphinx-doc.org/en/master/usage/restructuredtext/index.html>`__ из документације Sphinx-а 
* `Runestone Author’s Guide <https://runestone.academy/runestone/static/authorguide/index.html>`__
* `PetljaDoc README <https://github.com/Petlja/PetljaDoc/blob/master/README.md>`__ 
* Приручник Текстуално програмирање у Пајтону, урађен у Петљадоку `source code <https://github.com/Petlja/TxtProgInPythonSrLat>`__ and 
  `public preview <https://petlja.github.io/TxtProgInPythonSrLat/>`__
* Мустра за курс коју можете користити приликом рада https://github.com/Petlja/Primer_Kurs/archive/master.zip